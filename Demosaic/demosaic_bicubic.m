function result = demosaic_bicubic(img)
%bicubic
%三个通道的初始化重建
[h,w] = size(img);
img2 = zeros(h+4,w+4);%扩大两圈，三次考虑5*5的范围
img2(3:h+2,3:w+2) = img;
img2(1,:)=img2(3,:);img2(2,:)=img2(4,:);img2(h+4,:) = img2(h+2,:);img2(h+3,:) = img2(h+1,:);
img2(:,1) = img2(:,3);img2(:,2) = img2(:,4);img2(:,w+4) = img2(:,w+2);img2(:,w+3) = img2(:,w+1);
r = zeros(h+4,w+4);
g = zeros(h+4,w+4);
b = zeros(h+4,w+4);
for i = 1:h+4
    for j = 1:w+4
        if(mod(i,2)==1 && mod(j,2) ==0)%r channel
            r(i,j) = img2(i,j);
        elseif(mod(i,2)==0 && mod(j,2) ==1)%b channel
            b(i,j) = img2(i,j);
        else
            g(i,j) = img2(i,j);
        end
    end
end

%双三次插值
%插值函数为cubic
w0 = cubic(0);w1 = cubic(0.5);w2 = cubic(1.5);
for i = 3:h+2
    for j = 3:w+2
        if(mod(i,2) == 0&&mod(j,2)==1)%blue
            g(i,j) = (img2(i-2,j-1)*w1*w2...
                +img2(i-2,j+1)*w1*w2...
                +img2(i-1,j-2)*w1*w2...
                +img2(i-1,j)*w1*w0...
                +img2(i-1,j+2)*w1*w2...
                +img2(i,j-1)*w1*w0...
                +img2(i,j+1)*w1*w0...
                +img2(i+1,j-2)*w1*w2...
                +img2(i+1,j)*w1*w0...
                +img2(i+1,j+2)*w1*w2...
                +img2(i+2,j-1)*w1*w2...
                +img2(i+2,j+1)*w1*w2)/(w1*w2*8+w1*w0*4);
            r(i,j) = (img2(i-1,j-1)*w1*w1...
                +img2(i-1,j+1)*w1*w1...
                +img2(i+1,j-1)*w1*w1...
                +img2(i+1,j+1)*w1*w1)/(w1*w1*4);
        elseif(mod(i,2)==1&&mod(j,2)==0)%red
            g(i,j) = (img2(i-2,j-1)*w1*w2...
                +img2(i-2,j+1)*w1*w2...
                +img2(i-1,j-2)*w1*w2...
                +img2(i-1,j)*w1*w0...
                +img2(i-1,j+2)*w1*w2...
                +img2(i,j-1)*w1*w0...
                +img2(i,j+1)*w1*w0...
                +img2(i+1,j-2)*w1*w2...
                +img2(i+1,j)*w1*w0...
                +img2(i+1,j+2)*w1*w2...
                +img2(i+2,j-1)*w1*w2...
                +img2(i+2,j+1)*w1*w2)/(w1*w2*8+w1*w0*4);
            b(i,j) = (img2(i-1,j-1)*w1*w1...
                +img2(i-1,j+1)*w1*w1...
                +img2(i+1,j-1)*w1*w1...
                +img2(i+1,j+1)*w1*w1)/(w1*w1*4);
        else%green
            b(i,j) = (img2(i-1,j-2)*w1*w2...
                +img2(i-1,j+2)*w1*w2...
                +img2(i-1,j)*w1*w0...
                +img2(i+1,j)*w1*w0...
                +img2(i+1,j+2)*w1*w2...
                +img2(i+1,j-2)*w1*w2)/(w1*w2*4+w1*w0*2);
            r(i,j) = (img2(i-2,j-1)*w1*w2...
                +img2(i-2,j+1)*w1*w2...
                +img2(i,j-1)*w1*w0...
                +img2(i,j+1)*w1*w0...
                +img2(i+2,j-1)*w1*w2...
                +img2(i+2,j+1)*w1*w2)/(w1*w2*4+w1*w0*2);
    
        end
    end
end
r(r<0) = 0;
r(r>255) = 255;
g(g<0) = 0;
g(g>255) = 255;
b(b<0) = 0;
b(b>255) = 255;
%截取结果
result = cat(3,r(3:h+2,3:w+2),g(3:h+2,3:w+2),b(3:h+2,3:w+2))/256;
end

function w = cubic(x)
if(abs(x)<=1)
    w = 1.5*power(x,3)-2.5*power(x,2)+1;
elseif(abs(x)>1&&abs(x)<2)
    w = -0.5*power(x,3) - 5*(-0.5)*power(x,2)-4*abs(x)+2;
else
    w = 0;
end
end
